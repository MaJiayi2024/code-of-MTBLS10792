{\rtf1\ansi\ansicpg936\cocoartf2708
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
if (!require('tidyverse', quietly = TRUE)) \{ install.packages('tidyverse', type = 'binary') \}\
library(tidyverse)\
\
dataDF <- read_tsv('data.txt', col_types = cols())\
head(dataDF)\
\
sampleDF <- read_tsv('group.txt', col_types = cols())\
print(sampleDF)\
\
dataFrame <- dataDF %>%\
             pivot_longer(-Index, names_to = 'Sample', values_to = 'value') %>% \
             left_join(sampleDF, by = 'Sample')                               \
head(dataFrame)\
\
data.FC <- dataFrame %>%\
           group_by(Index, Group) %>%\
           summarise(mean = mean(value, na.rm = T), .groups = 'keep') %>%  \
           pivot_wider(names_from = Group, values_from = mean) %>%     \
           summarise(Fold_Change = RBC_IMM_high/RBC_IMM_low)                              \
head(data.FC)\
\
if (!require('rstatix', quietly = TRUE)) \{install.packages('rstatix', type = 'binary')\}\
library(rstatix)\
\
dataTranspose <- dataDF %>%\
                 column_to_rownames(var = "Index") %>%   \
                 t() %>%                                \
                 as.data.frame()\
allVars <- colnames(dataTranspose)\
data.normal <- dataTranspose %>% \
               shapiro_test(allVars) %>%         \
               mutate(Normal_Distribution = case_when(p > 0.05 ~ 'YES', TRUE ~ 'NO'))\
head(data.normal)\
\
data.ttest <- dataFrame %>%\
              group_by(Index) %>%\
              t_test(value ~ Group) %>%                \
              adjust_pvalue(method = 'fdr')       \
\
head(data.ttest)\
\
data.ttest <- data.ttest %>%\
              select(c('Index','p','p.adj')) %>%      \
              rename(`P-value` = p, FDR = p.adj)      \
head(data.ttest)\
\
data.wtest <- dataFrame %>%\
              group_by(Index) %>%\
              wilcox_test(value ~ Group) %>%             \
              adjust_pvalue(method = 'fdr')                 \
\
\
dataMatrix <- dataDF %>%\
              select(c('Index', sampleDF$Sample)) %>%\
              column_to_rownames(var = "Index") %>%   \
              t()                           \
\
pca <- prcomp(dataMatrix, center = T, scale = T)\
pca <- summary(pca)\
\
allComponentFrame <- pca$x %>%\
                     as.data.frame %>%\
                     rownames_to_column(var = 'Sample') %>%\
                     as_tibble %>%\
                     inner_join(sampleDF, by = "Sample")\
\
pc1VarianceRatio <- pca$importance[2, 1] * 100\
pc2VarianceRatio <- pca$importance[2, 2] * 100\
\
p <- ggplot(data = allComponentFrame, aes(x = PC1, y = PC2))\
p <- p + geom_point(aes(color = Group), size = 3)\
\
p <- p + labs(x = paste0("PC1 (", round(pc1VarianceRatio, 2), "%)"),\
              y = paste0("PC2 (", round(pc2VarianceRatio, 2), "%)"))\
\
if (!require('ggrepel', quietly = TRUE)) \{install.packages('ggrepel', type = 'binary')\}\
library(ggrepel)\
p <- p + geom_text_repel(aes(label = Sample, color = Group), show.legend = FALSE, size = 3)\
p <- p + theme_bw()\
p\
ggsave('PCA.png', width = 8, height = 6)\
ggsave('PCA.pdf', width = 8, height = 6)\
dev.off()\
\
if (!requireNamespace("BiocManager", quietly = TRUE))\{install.packages("BiocManager")\}\
if (!requireNamespace('ropls', quietly = TRUE)) \{BiocManager::install("ropls")\}\
library(ropls)\
\
data.info <- dataDF %>%\
             inner_join(data.FC, by = 'Index') %>%\
             inner_join(data.ttest, by = 'Index') %>%\
             inner_join(oplsVIP, by = 'Index')\
\
PvalueCutoff <- 0.05\
VIPCutoff <- 1.5     \
FCCutoff <- 1.2       \
### Pvalue+VIP+FC
\f1 \'a3\'a8
\f0 \
# PvalueCutoff <- 0.05 \
# VIPCutoff <- 1    \
# FCCutoff <- 2      \
\
data.filter <- data.info %>%\
               mutate(Type = case_when(\
                   `P-value` < PvalueCutoff & VIP > VIPCutoff & Fold_Change >= FCCutoff  ~ 'up',\
                   `P-value` < PvalueCutoff & VIP > VIPCutoff & Fold_Change <  1/FCCutoff  ~ 'down',\
                    TRUE ~ 'insig')) %>%\
               filter(Type %in% c('up', 'down'))\
\
write_csv(data.filter, 'data_filter.txt')}